/* Mixins */

@mixin mq($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin mq-max($width) {
  @media (max-width: $width) {
    @content;
  }
}

// RGBa colors with fallbacks
// Usage
//  @include rgba(#333, 0.5);
@mixin rgba($color, $opacity: 1) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}


// Gradient
@mixin transparent-gradient {
  background-image: linear-gradient(bottom, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 100%);
  background-image: -o-linear-gradient(bottom, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 100%);
  background-image: -moz-linear-gradient(bottom, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 100%);
  background-image: -webkit-linear-gradient(bottom, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 100%);
  background-image: -ms-linear-gradient(bottom, rgba(0,0,0,0.1) 0%, rgba(255,255,255,0.1) 100%);
  background-image: -webkit-gradient( linear, left bottom, left top, color-stop(0, rgba(0,0,0,0.1)), color-stop(1, rgba(255,255,255,0.1)) );
}

// Gradient
@mixin gradient($from, $to) {
  background-color: $from;
  background-image: -moz-linear-gradient($from, $to);
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
  background-image: -webkit-linear-gradient($from, $to);
  background-image: -o-linear-gradient($from, $to);
}

// Border Radius - Individual Corners
@mixin radius-each($topleft: 0, $topright: 0, $bottomright: 0, $bottomleft: 0) {
  border-top-left-radius: $topleft;
  border-top-right-radius: $topright;
  border-bottom-right-radius: $bottomright;
  border-bottom-left-radius: $bottomleft;
  background-clip: padding-box;
}

// Transition
@mixin transition ($properties...) {
  transition: ($properties);
}

// Border Radius
@mixin radius($amount) {
  border-radius: $amount;
  background-clip: padding-box;
}

//  Image Replacement
@mixin ir {
	display: block;
	text-indent: -999em;
	overflow: hidden;
	background-repeat: no-repeat;
	text-align: left;
	direction: ltr;
}

// Box Model
@mixin box {
  box-sizing: border-box;
}

// Size
@mixin size($width, $height, $radius: 0) {
  width: $width;
  height: $height;
  border-radius: $radius;
}

// Font sizing + rem calc
@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

// Ellipsis
@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}


// ClearFix
@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}


/*
 * Provide a hover effect for non-touch devices, turn it into an Active state for mobile, and maintain a fallback.
 * @requires Modernizr as a JS dependency to get .no-touch classes
 * Adds styles via @content
 */
@mixin touch-hover() {
    .no-js &:hover, // the fallback
    .no-js &:focus,
    .js.no-touch &:hover, // enhanced for no-touch
    .js.no-touch &:focus,
    .js.touch &:active { // relay same styles to active for touch devices
        @content;
    }
}
